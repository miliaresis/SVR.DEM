

 --- DEM SVR by G. Ch. Miliaresis ---

Processing options: 
  TIFF import options ['PIL', 'SKITimage'] 
  Clustering options ['Kmeans', 'Kmeans refined by NBG'] 
 
_______________________________________________________________

DISPLAY ACTIVE DATA HEADER

---> ALOS, SRTM, ASTER GDEMs, 1 arc sec, Lat/Lon, WGS84, EGM96
Labels for x-axis, y-axis of images/histograms:
         ['H, m', 'Longitude,DD', 'Latitude, DD']
Geographic extent of data:  [54.2362, 54.681, 27.1107, 27.5555]
AXES legends & Tables headers for rows  & columns 
    ['A', 'S', 'G'] 
    ['A', 'S', 'G'] 
    ['ALOS', 'SRTM', 'ASTER']
Domain of histograms, data:  301 2210  Rdata:  -25 25  m
Subdir with images or vector files=  data
Clustering method:  Kmeans refined by NBG
Method for TIF file import:  PIL

Data headers available:  ['dataDEM2']
_______________________________________________________________

IMPORT/READ DATA FILES

Files EXTENSION=  .tif DIR:  data 

FILENAMES:  ['MASK', '01', '02', '03']  (names are case sensitive)

data\MASK.tif (1601, 1601)
data\01.tif (1601, 1601)
data\02.tif (1601, 1601)
data\03.tif (1601, 1601)
_____________________________________________________________
Help on module dmr_data_headers:

NAME
    dmr_data_headers - Created on  20th of December, 2017

DESCRIPTION
    @author: gmiliar (George Ch. Miliaresis)
    Dimensonality reduction for DEMs (SVR.DEM) by G.Ch. Miliaresis
    Ver. 2017.02 winpython implementation, (https://winpython.github.io/)
    Details in https://github.com/miliaresis
               https://sites.google.com/site/miliaresisg/
    ----------------------------------------------------
    TO LOAD your data, define a header in the file svr_data_headers.py.
    ---------------------------------------------------------

FUNCTIONS
    dataDEM2(clustering_options, tiff_import_options)
        ALOS, SRTM, ASTER GDEMs
    
    phead(xy, ML, x, x2, x3, Lmn, Lmx, Rmn, Rmx, LDIR, T, cm)
        PRINT DATA HEADER.
         DATA files stored in a subdir named  data within the dir where the
         3 scripts are stored.
        The tif image filenames (in the data dir) are fixed :
          MASK [0, 1 for data], & 01, 02, 03 for the 3 DEMs (ALOS, SRTM, ASTER)
          THE NAMES ARE CASE SENSITIVE and they are
          determined automatically from the script (as well as the dimension of
          the feature space -> length of tics list), so you should preserve them
          in your data dir.

FILE
    d:\run_z\dmr_data_headers.py
_____________________________________________________
Help on module dmr_myf:

NAME
    dmr_myf - Created on  20th of December, 2017

DESCRIPTION
    @author: gmiliar (George Ch. Miliaresis)
    Dimensonality reduction for DEMs (SVR.DEM) by G.Ch. Miliaresis
    Ver. 2017.02 winpython implementation, (https://winpython.github.io/)
    Details in https://github.com/miliaresis
               https://sites.google.com/site/miliaresisg/

FUNCTIONS
    CreateMask_fromCluster(c)
        Create mask matrix from cluster image matrix
    
    ImplementSVR_MG(data, Labelmonth1, f)
        main calls to SVR_MG
    
    Kmeans_init(number_of_clusters)
        Kmeans initialization
    
    MainRun(data, rows, cols, GeoExtent, FigureLabels, LabelHLatLonLST, LabelLST, LabelLSTxls, Hmin, Hmax, HRmin, HRmax, Clustering_method, clustering_options)
        Main run module of SVR-mg.py
    
    Processing_constants()
        TIF import options (in function tiff_to_np in dim_myf)
              if PIL  then Image from PIL is used
              if SKITimage  then skimage.io is used
        CLUSTERING & CLASSIFICATION OPTIONS:
              K-means clustering
              K-means clustering refined by Naive Bayes Gaussian classification
    
    Reconstruct_matrix(evmat, LST)
        Inverse transform keep pc-1 only
    
    Reconstruct_matrix2(evmat, LST)
        Inverse transform keep pc2 & pc3 only
    
    centroids_visualize(data, figuretitle, Lx, MDLabel)
        Visualize centroids
    
    clusterRefineNBG(CM, centroid, iteration, centroid_variance, bb)
        Clustering refinements by NBG,
        display mean standardized divergence (n*n)-n, n=clusters
    
    clustering_Kmeans(data, LabelLST, maxC, maxNBG, f, FigureLabels, Clustering_method)
        Kmeans clustering
    
    clustering_Kmeans_by_NBG(data, ML2, maxC, maxNBG, f, MDLabel, Clustering_method)
        Kmeans clustering refined by NBG -density, display mean divergence
    
    compute_descriptive_stats(RLST, x, lst_or_rlst)
        compute mean, st.dev, kurtosis, skew
    
    covariance_matrix(LST2)
        Compoute variance-covariance matrix
    
    create_data_files(data)
        Read data file, create sub-matrices
    
    creatematrix(rows, cols, ids, labels)
        vector to image matrix
    
    crosscorrelate(LST)
        compute the crosscorrelation matrix
    
    data_imv_read(LfilesDIR, featuredimension, T)
        Main Data FILE (individual images read)
    
    descriptive_stats_RLST(data, LABELmonths3, Lx, f, lst_or_rlst)
        Compute, display & save to xlsx descriptive statistics for Rdata
    
    display_LST(rows, cols, xyrange, data, x, f, MDLabel)
        display data images and save to png/tiff files
    
    display_RLST(rows, cols, xyrange, data, RLST, x, f, MDLabel)
        display Rdata images and save to png/tif files
    
    display_save_clusterimage(rows, cols, xyrange, data, labels, f, w, MDLabe)
        covert vector cluster labels to image, plot it & save to tif
    
    display_save_maskimage(xyrange, c, MDLabel)
        convert vector cluster labels to image, plot,  save as csv, mat, tif
    
    dummyvar_fcheck()
        assign dummy variables if file donot exist (to exit from return var
    
    filenames_of_images(k)
        Defines the filenames of images  MASK, 01, 02, 03
    
    findcreatenewpath()
        Creates a new (non exisiting) path within the data/script-path where
        the output files are stored. The path name is ...\outX where X is
        a number determined automatically by this script
    
    findpaths_data2csv(data)
        find newpath to store outputs, change to newpath data dir
    
    historyfile()
        Track (save to file) the user inputs and the file outputs
    
    input_screen_int(xstring, xmin, xmax)
        input an integer X from screen in the range min<=X<=xmax
    
    input_screen_str_yn(xstring)
        input a string X from screen y, Y, n, N
    
    pcanew(LST)
        compute eigevalues, & eigenvectors
    
    plotmatrix(c, xyrange, lut, name1, yesno, MDLabel)
        plot a matrix
    
    printHST(RLST, Fstring, xmin, xmax, x, f, MDLabel)
        print histogram of LST/RLST
    
    printNPP(RLST, x, f, lst_or_rlst)
        print normal propability plot
    
    printRLST_correlation(data, x)
        write Rdata cross correlation matrix  to xls file
    
    prn_xls_centroids(workbook, Centroids, LabelLST)
        write Centroids matrix to a sheet of an excel workbook
    
    prn_xls_cluster_membership(workbook, CLlabels)
        compute & write cluster membership to excel file
    
    prn_xls_divergence(workbook, Diverg)
        write Divergence matrix to a sheet of an excel workbook
    
    prn_xls_sigma(workbook, sigma, LabelLST)
        write Sigma matrix to a sheet of an excel workbook
    
    prnxls_confuse(workbook, data2)
        Add confusion matrix to an xls sheet within a workbook
    
    program_constants()
        program constants:
        maxC = Maximum number of clusters
        maxNBG =  Maximum number of NBG refinements
    
    readdatafiles(filename, rows1, cols1, continue1, T)
        Read SVR 2-d tif file &  convert it 1-dto numpy array
    
    readdatafiles0(filename, continue1, T)
        Read image 2-d tif file &  convert it 1-d to numpy array
    
    readimagetiff(Ldatafiles, T)
        Read individual tiff images - convert data
    
    retranslatebymean(LST, RLST)
        RETranslate a matrix by mean vector (per columns)
    
    savematrix2image(c, name1)
        save image to tif file
    
    sortdescent(evs, evmat)
        sort eigenvalues-eigenvectors in descenting eigenvalue magnitude
    
    standardize_matrix2(A)
        standardize a 2-d matrix per columns
    
    tiff_to_np(filename, T)
        Read/Import tiff file
    
    translatebymean(LST)
        Translate a matrix by mean (per columns)
    
    write2classconvergece(a, iteration)
        Save mean inertia convergence to xlsx file
    
    xlspca(data, data1, data2, data3, x)
        write correlation matrix, eigen-vectors/values to xls file

FILE
    d:\run_z\dmr_myf.py
